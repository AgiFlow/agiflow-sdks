version: '3.9'

services:
  analytics-db:
    image: postgres:16.2
    environment:
      POSTGRES_PASSWORD: ${ANALYTICS_DB_PASSWORD}
      POSTGRES_USER: ${ANALYTICS_DB_USER}
      POSTGRES_DB: ${ANALYTICS_DB_DATABASE}
    ports:
      - "5432:5432"

  saas-db:
    image: postgres:16.2
    environment:
      POSTGRES_PASSWORD: ${SAAS_DB_PASSWORD}
      POSTGRES_USER: ${SAAS_DB_USER}
      POSTGRES_DB: ${SAAS_DB_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    ports:
      - "5433:5432"
    volumes:
      - ./init.sh:/docker-entrypoint-initdb.d/init-user-db.sh

  auth:
    container_name: supabase-auth
    image: supabase/gotrue:v2.151.0
    depends_on:
      saas-db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9999/health"
        ]
      timeout: 5s
      interval: 5s
      retries: 3
    restart: unless-stopped
    environment:
      API_EXTERNAL_URL: ${API_EXTERNAL_URL}
      GOTRUE_SITE_URL: ${API_EXTERNAL_URL}
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_SECRET: ${AUTH_JWT_SECRET}
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      JWT_SECRET: ${AUTH_JWT_SECRET}
      JWT_EXPIRY: 3600
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: ${GOTRUE_DB_DATABASE_URL}
      GOTRUE_MAILER_AUTOCONFIRM: true
      ENABLE_EMAIL_SIGNUP: true
      ENABLE_EMAIL_AUTOCONFIRM: true
      GOTRUE_EXTERNAL_GITHUB_ENABLED: true
      GOTRUE_EXTERNAL_GITHUB_CLIENT_ID: ${GOTRUE_EXTERNAL_GITHUB_CLIENT_ID}
      GOTRUE_EXTERNAL_GITHUB_SECRET: ${GOTRUE_EXTERNAL_GITHUB_SECRET}
      GOTRUE_EXTERNAL_GITHUB_REDIRECT_URI: ${GOTRUE_EXTERNAL_GITHUB_REDIRECT_URI}
    ports:
      - "8090:9999"

  kong:
    container_name: supabase-kong
    image: kong:2.8.1
    entrypoint: bash -c 'eval "echo \"$$(cat ~/temp.yml)\"" > ~/kong.yml && /docker-entrypoint.sh kong docker-start'
    ports:
      - 8070:8000/tcp
      - 8071:8443/tcp
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /home/kong/kong.yml
      # https://github.com/supabase/cli/issues/14
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      DASHBOARD_USERNAME: ${SUPABASE_DASHBOARD_USERNAME}
      DASHBOARD_PASSWORD: ${SUPABASE_DASHBOARD_PASSWORD}
    volumes:
      - ./kong.yml:/home/kong/temp.yml:ro

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    container_name: kafka

  kafka-api:
    image: agiflow/kafka-api
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    build:
      context: .
    volumes:
      - ../../backend/apis/kafka-api/dist:/usr/local/app/dist
    command: node ./dist/index.js
    ports:
      - '9070:9070'
