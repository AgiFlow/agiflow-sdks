version: '3.9'

services:
  agiflow-db:
    image: agiflowai/postgres16-dev
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: admin
      POSTGRES_DB: agiflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  agiflow-kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@agiflow-kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    container_name: agiflow-kafka
    restart: always

  agiflow-app:
    image: agiflowai/app-dev
    ports:
      - '3000:3000'
    depends_on:
      agiflow-db:
        condition: service_healthy
      agiflow-kafka:
        condition: service_started
    # environment:
    #  - CORS_ORIGIN=http://localhost:3000,http://localhost:3001

  agiflow-guardrails:
    image: agiflowai/guardrails-dev
    restart: always
    depends_on:
      agiflow-app:
        condition: service_started

volumes:
  pgdata:
